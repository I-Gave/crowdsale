Analysis result for tokenRecipient:
==== Message call to external contract ====
Type: Warning
Contract: tokenRecipient
Function name: _function_0x8f4ffcb1
PC address: 572
The function _function_0x8f4ffcb1 contains a function call to an address provided as a function argument.The available gas is forwarded to the called contract. Make sure that the logic of the calling contract is not adversely affected if the called contract misbehaves (e.g. reentrancy).
--------------------
In file: tokenRecipient.json:26

t.transferFrom(_from, this, _value)

--------------------


Analysis result for ERC721Token: No issues found.
Analysis result for SafeMath: No issues found.
Analysis result for BasicToken:
==== Exception state ====
Type: Informational
Contract: BasicToken
Function name: _function_0xa9059cbb
PC address: 969
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_BasicToken_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700
calldata_BasicToken_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc
storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
caller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc
calldata_BasicToken_4: 0xffffffffffffffffffffffffffffffffffffffff
calldata_BasicToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000
calldatasize_BasicToken: 0x4
callvalue: 0x0


--------------------
In file: BasicToken.json:44

.
  * @return 

--------------------


Analysis result for IGVDAPP:
==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0x493f1726
PC address: 4632
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVDAPP_4: 0x80000000000000020000000000000000004000000000
storage_5: 0x80000000000000020000000000000000004000000000
storage_14: 0x0
caller: 0x0
calldata_IGVDAPP_0: 0x493f172600000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4
callvalue: 0x0


--------------------
In file: IGVDAPP.json:14
==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0x4be71f18
PC address: 4999
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVDAPP_4: 0x4000000000
storage_5: 0x4000000000
caller: 0x0
storage_keccac_calldata_IGVDAPP_4: 0x0
calldata_IGVDAPP_0: 0x4be71f1800000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4
callvalue: 0x0


--------------------
In file: IGVDAPP.json:14
==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0x5598f8cc
PC address: 5148
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVDAPP_4: 0x0
storage_5: 0x0
calldata_IGVDAPP_0: 0x5598f8cc00000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4
callvalue: 0x0


--------------------
In file: IGVDAPP.json:14
==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0x6f33a98a
PC address: 6007
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_5: 0x0
calldata_IGVDAPP_4: 0x0
calldata_IGVDAPP_0: 0x6f33a98a00000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4


--------------------
In file: IGVDAPP.json:14
==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0x81cdb4c3
PC address: 6507
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_keccac_calldata_IGVDAPP_4: 0x0
calldata_IGVDAPP_32 + 4: 0x0
calldata_IGVDAPP_0: 0x81cdb4c300000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4
callvalue: 0x0


--------------------
In file: IGVDAPP.json:14
==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0x91417542
PC address: 6861
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVDAPP_32 + 4: 0x0
storage_keccac_1461501637330902918203684832716283019655932542975_&
calldata_IGVDAPP_4: 0x0
calldata_IGVDAPP_0: 0x9141754200000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4
callvalue: 0x0


--------------------
In file: IGVDAPP.json:10

 Campaign", "");
    _createCertificate(0, 1, "Genesis Certi

--------------------

==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0xa5f87775
PC address: 6977
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVDAPP_32 + 4: 0x0
storage_keccac_calldata_IGVDAPP_4: 0x0
calldata_IGVDAPP_0: 0xa5f8777500000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4
callvalue: 0x0


--------------------
In file: IGVDAPP.json:14
==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0xb2cdc6ff
PC address: 7656
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVDAPP_4: 0x100000000000020000000000000000000000000000
storage_5: 0x100000000000020000000000000000000000000000
storage_14: 0x0
caller: 0x0
calldata_IGVDAPP_0: 0xb2cdc6ff00000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4
callvalue: 0x0


--------------------
In file: IGVDAPP.json:14
==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0xe4b50cb8
PC address: 8335
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVDAPP_4: 0x0
storage_6: 0x0
calldata_IGVDAPP_0: 0xe4b50cb800000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4
callvalue: 0x0


--------------------
In file: IGVDAPP.json:14
==== Exception state ====
Type: Informational
Contract: IGVDAPP
Function name: _function_0xfea62cae
PC address: 8640
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVDAPP_32 + 4: 0x0
storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_IGVDAPP_4: 0x0
calldata_IGVDAPP_0: 0xfea62cae00000000000000000000000000000000000000000000000000000000
calldatasize_IGVDAPP: 0x4
callvalue: 0x0


--------------------
In file: IGVDAPP.json:14

Analysis result for IGVCrowdsale:
==== Exception state ====
Type: Informational
Contract: IGVCrowdsale
Function name: _function_0xfc0c546a
PC address: 2775
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_5: 0x1
callvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
caller: 0xffffffffffffffffffffffffffffffffffffffff
calldata_IGVCrowdsale_0: 0x2c5e722e00000000000000000000000000000000000000000000000000000000
calldatasize_IGVCrowdsale: 0x4


--------------------
In file: IGVCrowdsale.json:19

Analysis result for TokenTemplate:
==== Exception state ====
Type: Informational
Contract: TokenTemplate
Function name: _function_0xd73dd623
PC address: 6168
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_TokenTemplate_4: 0x1
calldata_TokenTemplate_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
calldata_TokenTemplate_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000
calldatasize_TokenTemplate: 0x4
callvalue: 0x0


--------------------
In file: TokenTemplate.json:16

Analysis result for IGVAsset: No issues found.
Analysis result for IGVCore:
==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0x493f1726
PC address: 4632
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCore_4: 0x1
storage_5: 0x1
storage_14: 0x0
caller: 0x0
calldata_IGVCore_0: 0x493f172600000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4
callvalue: 0x0


--------------------
In file: IGVCore.json:98

campaigns[_campaignId]

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0x4be71f18
PC address: 4999
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCore_4: 0x1
storage_5: 0x1
caller: 0x0
storage_keccac_calldata_IGVCore_4: 0x0
calldata_IGVCore_0: 0x4be71f1800000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4
callvalue: 0x0


--------------------
In file: IGVCore.json:46

campaigns[_campaignId]

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0x5598f8cc
PC address: 5148
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCore_4: 0x0
storage_5: 0x0
calldata_IGVCore_0: 0x5598f8cc00000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4
callvalue: 0x0


--------------------
In file: IGVCore.json:124
==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0x6f33a98a
PC address: 6007
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_5: 0x0
calldata_IGVCore_4: 0x0
calldata_IGVCore_0: 0x6f33a98a00000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4


--------------------
In file: IGVCore.json:62

campaigns[_campaignId]

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0x81cdb4c3
PC address: 6507
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_keccac_calldata_IGVCore_4: 0x0
calldata_IGVCore_32 + 4: 0x0
calldata_IGVCore_0: 0x81cdb4c300000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4
callvalue: 0x0


--------------------
In file: IGVCore.json:124
==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0x91417542
PC address: 6861
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCore_32 + 4: 0x0
storage_keccac_1461501637330902918203684832716283019655932542975_&
calldata_IGVCore_4: 0x0
calldata_IGVCore_0: 0x9141754200000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4
callvalue: 0x0


--------------------
In file: IGVCore.json:9

d = 0;

  event ActivateCampaign(uint256 campaignId);
  even

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0xa5f87775
PC address: 6977
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCore_32 + 4: 0x0
storage_keccac_calldata_IGVCore_4: 0x0
calldata_IGVCore_0: 0xa5f8777500000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4
callvalue: 0x0


--------------------
In file: IGVCore.json:20

  function createCampaign(
    string _campaignName,
    strin

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0xb2cdc6ff
PC address: 7656
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCore_4: 0x1
storage_5: 0x1
storage_14: 0x0
caller: 0x0
calldata_IGVCore_0: 0xb2cdc6ff00000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4
callvalue: 0x0


--------------------
In file: IGVCore.json:85

campaigns[_campaignId]

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0xe4b50cb8
PC address: 8335
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCore_4: 0x0
storage_6: 0x0
calldata_IGVCore_0: 0xe4b50cb800000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4
callvalue: 0x0


--------------------
In file: IGVCore.json:124
==== Exception state ====
Type: Informational
Contract: IGVCore
Function name: _function_0xfea62cae
PC address: 8640
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCore_32 + 4: 0x0
storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_IGVCore_4: 0x0
calldata_IGVCore_0: 0xfea62cae00000000000000000000000000000000000000000000000000000000
calldatasize_IGVCore: 0x4
callvalue: 0x0


--------------------
In file: IGVCore.json:124

Analysis result for StandardToken:
==== Exception state ====
Type: Informational
Contract: StandardToken
Function name: _function_0xd73dd623
PC address: 4019
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_StandardToken_4: 0x1
calldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
calldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000
calldatasize_StandardToken: 0x4
callvalue: 0x0


--------------------
In file: StandardToken.json:32

er].sub(_value

--------------------


Analysis result for MultiTenantAdapter:
==== Exception state ====
Type: Informational
Contract: MultiTenantAdapter
Function name: _function_0x65ea090f
PC address: 513
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_MultiTenantAdapter_4: 0x0
storage_0: 0x0
calldata_MultiTenantAdapter_0: 0x65ea090f00000000000000000000000000000000000000000000000000000000
calldatasize_MultiTenantAdapter: 0x4
callvalue: 0x0


--------------------
In file: MultiTenantAdapter.json:8

Token[] public _tokenAddresses

--------------------

==== Exception state ====
Type: Informational
Contract: MultiTenantAdapter
Function name: _function_0x6be7658b
PC address: 577
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_MultiTenantAdapter_4: 0x0
storage_0: 0x0
calldata_MultiTenantAdapter_0: 0x6be7658b00000000000000000000000000000000000000000000000000000000
calldatasize_MultiTenantAdapter: 0x4
callvalue: 0x0


--------------------
In file: MultiTenantAdapter.json:35

_tokenAddresses[index]

--------------------

==== Exception state ====
Type: Informational
Contract: MultiTenantAdapter
Function name: _function_0x70a08231
PC address: 698
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

retval_970: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
extcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
calldata_MultiTenantAdapter_0: 0x70a0823100000000000000000000000000000000000000000000000000000000
calldatasize_MultiTenantAdapter: 0x4
callvalue: 0x0


--------------------
In file: MultiTenantAdapter.json:18

_tokenAddresses[i]

--------------------


Analysis result for Crowdsale:
==== Exception state ====
Type: Informational
Contract: Crowdsale
Function name: _function_0xec8ac4d8
PC address: 1424
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

timestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
callvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
calldata_Crowdsale_4: 0xffffffffffffffffffffffffffffffffffffffff
calldata_Crowdsale_0: 0xec8ac4d800000000000000000000000000000000000000000000000000000000
calldatasize_Crowdsale: 0x4


--------------------
In file: Crowdsale.json:12

 a token per ETH r

--------------------


Analysis result for ERC721TokenMock: No issues found.
Analysis result for MessageHelper:
==== Message call to external contract ====
Type: Warning
Contract: MessageHelper
Function name: _function_0x1b8b921d
PC address: 538
The function _function_0x1b8b921d contains a function call to an address provided as a function argument.The available gas is forwarded to the called contract. Make sure that the logic of the calling contract is not adversely affected if the called contract misbehaves (e.g. reentrancy).
--------------------
In file: MessageHelper.json:1

gma solidity ^0.4.11;

contract MessageHelper {

  event Show(bytes32 b32, uint256 number, string text);

  f

--------------------


Analysis result for IGVTokenMock:
==== Exception state ====
Type: Informational
Contract: IGVTokenMock
Function name: _function_0xd73dd623
PC address: 5966
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_IGVTokenMock_4: 0x1
calldata_IGVTokenMock_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
calldata_IGVTokenMock_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000
calldatasize_IGVTokenMock: 0x4
callvalue: 0x0


--------------------
In file: IGVTokenMock.json:11

Analysis result for Ownable: No issues found.
Analysis result for RefundVault:
==== Exception state ====
Type: Informational
Contract: RefundVault
Function name: _function_0x43d726d6
PC address: 792
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_2: 0x8000
storage_0: 0x0
caller: 0x0
calldata_RefundVault_0: 0x43d726d600000000000000000000000000000000000000000000000000000000
calldatasize_RefundVault: 0x4
callvalue: 0x0


--------------------
In file: RefundVault.json:38

state == State.Active

--------------------

==== Exception state ====
Type: Informational
Contract: RefundVault
Function name: _function_0x8c52dc41
PC address: 1175
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_2: 0x8000
storage_0: 0x0
caller: 0x0
calldata_RefundVault_0: 0x8c52dc4100000000000000000000000000000000000000000000000000000000
calldatasize_RefundVault: 0x4
callvalue: 0x0


--------------------
In file: RefundVault.json:45

state == State.Active

--------------------

==== Exception state ====
Type: Informational
Contract: RefundVault
Function name: _function_0xc19d93fb
PC address: 404
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_2: 0x8000
calldata_RefundVault_0: 0xc19d93fb00000000000000000000000000000000000000000000000000000000
calldatasize_RefundVault: 0x4
callvalue: 0x0


--------------------
In file: RefundVault.json:20

State public state

--------------------

==== Exception state ====
Type: Informational
Contract: RefundVault
Function name: _function_0xf340fa01
PC address: 2340
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_2: 0x0
storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_RefundVault_4: 0x1
callvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
storage_0: 0x0
caller: 0x0
calldata_RefundVault_0: 0xf340fa0100000000000000000000000000000000000000000000000000000000
calldatasize_RefundVault: 0x4


--------------------
In file: RefundVault.json:44

 onlyOwner pub

--------------------

==== Exception state ====
Type: Informational
Contract: RefundVault
Function name: _function_0xf340fa01
PC address: 1821
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_2: 0x8000
storage_0: 0x0
caller: 0x0
calldata_RefundVault_0: 0xf340fa0100000000000000000000000000000000000000000000000000000000
calldatasize_RefundVault: 0x4


--------------------
In file: RefundVault.json:33

state == State.Active

--------------------

==== Exception state ====
Type: Informational
Contract: RefundVault
Function name: _function_0xfa89401a
PC address: 2027
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_2: 0x8000
calldata_RefundVault_0: 0xfa89401a00000000000000000000000000000000000000000000000000000000
calldatasize_RefundVault: 0x4
callvalue: 0x0


--------------------
In file: RefundVault.json:51

state == State.Refunding

--------------------


Analysis result for Association:
==== Message call to external contract ====
Type: Warning
Contract: Association
Function name: _function_0x8f4ffcb1
PC address: 3911
The function _function_0x8f4ffcb1 contains a function call to an address provided as a function argument.The available gas is forwarded to the called contract. Make sure that the logic of the calling contract is not adversely affected if the called contract misbehaves (e.g. reentrancy).
--------------------
In file: Association.json:26

t.transferFrom(_from, this, _value)

--------------------

==== Exception state ====
Type: Informational
Contract: Association
Function name: _function_0x013cf08b
PC address: 1988
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_Association_4: 0x0
storage_3: 0x0
calldata_Association_0: 0x13cf08b00000000000000000000000000000000000000000000000000000000
calldatasize_Association: 0x4
callvalue: 0x0


--------------------
In file: Association.json:56

Proposal[] public proposals

--------------------

==== Exception state ====
Type: Informational
Contract: Association
Function name: _function_0x237e9492
PC address: 2489
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_Association_4 + calldata_Association_32 + 4: 0x80
storage_3 +
9*calldata_Association_4 +
87903029871075914254377627908054574944891091886930582284385770809450030037083: 0x0
calldata_Association_4: 0x0
storage_4 +
9*calldata_Association_4 +
87903029871075914254377627908054574944891091886930582284385770809450030037083: 0x0
timestamp: 0x1
storage_3: 0x1
calldata_Association_0: 0x237e949200000000000000000000000000000000000000000000000000000000
calldatasize_Association: 0x4
KECCAC_mem_96 +
32 +
UDiv(31 +
     calldata_Association_4 + calldata_Association_32 + 4,
     32)*
32): 0x0
storage_6 + 96: 0x0
callvalue: 0x0


--------------------
In file: Association.json:246

p.votes[i]

--------------------

==== Exception state ====
Type: Informational
Contract: Association
Function name: _function_0x237e9492
PC address: 2143
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_Association_4: 0x0
storage_3: 0x0
calldata_Association_0: 0x237e949200000000000000000000000000000000000000000000000000000000
calldatasize_Association: 0x4
callvalue: 0x0


--------------------
In file: Association.json:234

proposals[proposalNumber]

--------------------

==== Exception state ====
Type: Informational
Contract: Association
Function name: _function_0xc9d27afe
PC address: 5655
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_Association_4: 0x0
storage_3: 0x0
retval_5608: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
extcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
calldata_Association_0: 0xc9d27afe00000000000000000000000000000000000000000000000000000000
calldatasize_Association: 0x4
callvalue: 0x0


--------------------
In file: Association.json:214

proposals[proposalNumber]

--------------------

==== Exception state ====
Type: Informational
Contract: Association
Function name: _function_0xeceb2945
PC address: 6221
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_Association_4: 0x0
storage_3: 0x0
calldata_Association_0: 0xeceb294500000000000000000000000000000000000000000000000000000000
calldatasize_Association: 0x4
callvalue: 0x0


--------------------
In file: Association.json:194

proposals[proposalNumber]

--------------------

==== Integer Underflow ====
Type: Warning
Contract: Association
Function name: _function_0x237e9492
PC address: 2361
A possible integer underflow exists in the function _function_0x237e9492.
The SUB instruction at address 2361 may result in a value < 0.
--------------------
In file: Association.json:10

Own

--------------------

==== Integer Underflow ====
Type: Warning
Contract: Association
Function name: _function_0xeceb2945
PC address: 6358
A possible integer underflow exists in the function _function_0xeceb2945.
The SUB instruction at address 6358 may result in a value < 0.
--------------------
In file: Association.json:10

Own

--------------------


Analysis result for MintableToken:
==== Exception state ====
Type: Informational
Contract: MintableToken
Function name: _function_0xd73dd623
PC address: 5483
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_MintableToken_4: 0x1
calldata_MintableToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
calldata_MintableToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000
calldatasize_MintableToken: 0x4
callvalue: 0x0


--------------------
In file: MintableToken.json:36

true;
  }

  /

--------------------


Analysis result for owned: No issues found.
Analysis result for IGVToken:
==== Exception state ====
Type: Informational
Contract: IGVToken
Function name: _function_0xd73dd623
PC address: 5966
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_IGVToken_4: 0x1
calldata_IGVToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
calldata_IGVToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000
calldatasize_IGVToken: 0x4
callvalue: 0x0


--------------------
In file: IGVToken.json:9

Analysis result for IGVCampaign:
==== Exception state ====
Type: Informational
Contract: IGVCampaign
Function name: _function_0x5598f8cc
PC address: 3566
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCampaign_4: 0x0
storage_5: 0x0
calldata_IGVCampaign_0: 0x5598f8cc00000000000000000000000000000000000000000000000000000000
calldatasize_IGVCampaign: 0x4
callvalue: 0x0


--------------------
In file: IGVCampaign.json:139

campaigns[_id]

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCampaign
Function name: _function_0x81cdb4c3
PC address: 4406
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

storage_keccac_calldata_IGVCampaign_4: 0x0
calldata_IGVCampaign_32 + 4: 0x0
calldata_IGVCampaign_0: 0x81cdb4c300000000000000000000000000000000000000000000000000000000
calldatasize_IGVCampaign: 0x4
callvalue: 0x0


--------------------
In file: IGVCampaign.json:160

campaignCertificates[_campaignId][_certificateIdx]

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCampaign
Function name: _function_0x91417542
PC address: 4722
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCampaign_32 + 4: 0x0
storage_keccac_1461501637330902918203684832716283019655932542975_&
calldata_IGVCampaign_4: 0x0
calldata_IGVCampaign_0: 0x9141754200000000000000000000000000000000000000000000000000000000
calldatasize_IGVCampaign: 0x4
callvalue: 0x0


--------------------
In file: IGVCampaign.json:11

mapping (address => uint256[]) public campaignOwnerToIndexes

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCampaign
Function name: _function_0xa5f87775
PC address: 4838
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCampaign_32 + 4: 0x0
storage_keccac_calldata_IGVCampaign_4: 0x0
calldata_IGVCampaign_0: 0xa5f8777500000000000000000000000000000000000000000000000000000000
calldatasize_IGVCampaign: 0x4
callvalue: 0x0


--------------------
In file: IGVCampaign.json:14

mapping (uint256 => Certificate[]) public campaignCertificates

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCampaign
Function name: _function_0xe4b50cb8
PC address: 5371
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCampaign_4: 0x0
storage_6: 0x0
calldata_IGVCampaign_0: 0xe4b50cb800000000000000000000000000000000000000000000000000000000
calldatasize_IGVCampaign: 0x4
callvalue: 0x0


--------------------
In file: IGVCampaign.json:180

tokens[_id]

--------------------

==== Exception state ====
Type: Informational
Contract: IGVCampaign
Function name: _function_0xfea62cae
PC address: 5599
A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that assert() should only be used to check invariants. Use require() for regular input checking. The exception is triggered under the following conditions:

calldata_IGVCampaign_32 + 4: 0x0
storage_keccac_1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
1461501637330902918203684832716283019655932542975_&
calldata_IGVCampaign_4: 0x0
calldata_IGVCampaign_0: 0xfea62cae00000000000000000000000000000000000000000000000000000000
calldatasize_IGVCampaign: 0x4
callvalue: 0x0


--------------------
In file: IGVCampaign.json:205

campaignOwnerToIndexes[_owner][_index]

--------------------


